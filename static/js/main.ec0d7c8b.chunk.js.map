{"version":3,"sources":["api/index.js","Components/Header/styles.js","Components/Header/Header.jsx","Components/PlaceDetails/styles.js","Components/PlaceDetails/PlaceDetails.jsx","Components/List/styles.js","Components/List/List.jsx","Components/Map/styles.js","Components/Map/mapStyles.js","Components/Map/Map.jsx","App.jsx","index.js"],"names":["getPlacesData","type","sw","ne","a","axios","get","params","bl_latitude","lat","tr_latitude","bl_longitude","lng","tr_longitude","headers","process","data","console","log","getWeatherData","method","url","lon","makeStyles","theme","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","toolbar","Header","setCoordinates","classes","useStyles","useState","autocomplete","setAutocomplete","AppBar","Toolbar","className","Typography","variant","Box","onLoad","autoC","onPlaceChanged","getPlace","geometry","location","InputBase","placeholder","root","input","chip","margin","subtitle","marginTop","PlaceDetails","place","selected","refProp","current","scrollIntoView","behavior","block","Card","elevation","CardMedia","style","image","photo","images","large","name","CardContent","gutterBottom","Rating","value","Number","rating","readOnly","num_reviews","price_level","ranking","awards","map","award","my","src","small","alt","display_name","cuisine","Chip","key","size","label","address","phone","CardActions","Button","onClick","window","open","web_url","website","formControl","minWidth","marginBottom","selectEmpty","loading","container","list","overflow","List","places","childClicked","isLoading","setType","setRating","elRefs","setElRefs","useEffect","length","refs","Array","fill","_","i","createRef","CircularProgress","FormControl","InputLabel","Select","onChange","e","target","MenuItem","Grid","ref","item","xs","paper","flexDirection","mapContainer","markerContainer","transform","zIndex","pointer","cursor","featureType","elementType","stylers","saturation","lightness","visibility","weight","Map","setBounds","coordinates","setChildClicked","weatherData","isDesktop","useMediaQuery","bootstrapURLKeys","defaultCenter","lt","center","defaultZoom","options","disableDefaultUI","zoomControl","styles","mapStyles","marginBounds","onChildClick","child","latitude","longitude","Paper","typography","fontSize","coord","weather","icon","App","setPlaces","setWeatherData","filteredPlaces","setFilteredPlaces","bounds","setIsLoading","navigator","geolocation","getCurrentPosition","coords","filter","then","CssBaseline","md","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ec0d7c8b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const getPlacesData = async (type, sw, ne) => {\r\n    try {\r\n        const {\r\n            data: { data },\r\n        } = await axios.get(`https://travel-advisor.p.rapidapi.com/${type}/list-in-boundary`, {\r\n            params: {\r\n                bl_latitude: sw.lat,\r\n                tr_latitude: ne.lat,\r\n                bl_longitude: sw.lng,\r\n                tr_longitude: ne.lng,\r\n            },\r\n            headers: {\r\n                'X-RapidAPI-Host': 'travel-advisor.p.rapidapi.com',\r\n                'X-RapidAPI-Key': process.env.REACT_APP_RAPIDAPI_KEY //! HIDE\r\n            },\r\n        });\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getWeatherData = async (lat, lng) => {\r\n    try {\r\n        const { data } = await axios.get('https://community-open-weather-map.p.rapidapi.com/find', {\r\n            method: 'GET',\r\n            url: 'https://community-open-weather-map.p.rapidapi.com/weather',\r\n            params: { lat, lon: lng },\r\n            headers: {\r\n                'X-RapidAPI-Host': 'community-open-weather-map.p.rapidapi.com',\r\n                'X-RapidAPI-Key': process.env.REACT_APP_RAPIDAPI_KEY, //! hide\r\n            },\r\n        });\r\n\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","import { alpha, makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n        '&:hover': { backgroundColor: alpha(theme.palette.common.white, 0.25) },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: { marginLeft: theme.spacing(3), width: 'auto' },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: { width: '20ch' },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n}));\r\n","import React, { useState } from 'react';\r\nimport { Autocomplete } from '@react-google-maps/api';\r\nimport { AppBar, Toolbar, Typography, InputBase, Box } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Header = ({ setCoordinates }) => {\r\n    const classes = useStyles();\r\n    const [autocomplete, setAutocomplete] = useState(null);\r\n\r\n    const onLoad = (autoC) => setAutocomplete(autoC);\r\n\r\n    const onPlaceChanged = () => {\r\n        const lat = autocomplete.getPlace().geometry.location.lat();\r\n        const lng = autocomplete.getPlace().geometry.location.lng();\r\n\r\n        setCoordinates({ lat, lng });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position='static'>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Typography variant='h5' className={classes.title}>\r\n                        Travel Advisor\r\n                    </Typography>\r\n                    <Box display='flex'>\r\n                        <Typography variant='h6' className={classes.title}>\r\n                            Explore new places\r\n                        </Typography>\r\n                        <Autocomplete onLoad={onLoad} onPlaceChanged={onPlaceChanged}>\r\n                            <div className={classes.search}>\r\n                                <div className={classes.searchIcon}>\r\n                                    <SearchIcon />\r\n                                </div>\r\n                                <InputBase\r\n                                    placeholder='Search...'\r\n                                    classes={{ root: classes.inputRoot, input: classes.inputInput }}\r\n                                />\r\n                            </div>\r\n                        </Autocomplete>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    chip: {\r\n        margin: '5px 5px 5px 0',\r\n    },\r\n    subtitle: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        marginTop: '10px',\r\n    },\r\n    spacing: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n}));\r\n","import React from 'react';\r\nimport { Box, Typography, Button, Card, CardMedia, CardContent, CardActions, Chip } from '@material-ui/core';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst PlaceDetails = ({ place, selected, refProp }) => {\r\n    const classes = useStyles();\r\n\r\n    if (selected && refProp && refProp.current) refProp.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n\r\n    return (\r\n        <div>\r\n            <Card elevation={6}>\r\n                <CardMedia\r\n                    style={{ height: 350 }}\r\n                    image={\r\n                        place.photo\r\n                            ? place.photo.images.large.url\r\n                            : 'https://www.foodserviceandhospitality.com/wp-content/uploads/2016/09/Restaurant-Placeholder-001.jpg'\r\n                    }\r\n                    title={place.name}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant='h5'>\r\n                        {place.name}\r\n                    </Typography>\r\n                    <Box display='flex' justifyContent='space-between'>\r\n                        <Rating value={Number(place.rating)} readOnly />\r\n                        <Typography gutterBottom variant='subtitle1'>\r\n                            ouf of {place.num_reviews} reviews\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box display='flex' justifyContent='space-between'>\r\n                        <Typography variant='subtitle1'>Price</Typography>\r\n                        <Typography gutterBottom variant='subtitle1'>\r\n                            {place.price_level}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box display='flex' justifyContent='space-between'>\r\n                        <Typography variant='subtitle1'>Ranking</Typography>\r\n                        <Typography gutterBottom variant='subtitle1'>\r\n                            {place.ranking}\r\n                        </Typography>\r\n                    </Box>\r\n                    {place.awards\r\n                        ? place.awards.map((award) => (\r\n                              <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n                                  <img my={1} src={award.images.small} alt={award.display_name} />\r\n                                  <Typography variant='subtitle2' color='textSecondary'>\r\n                                      {award.display_name}\r\n                                  </Typography>\r\n                              </Box>\r\n                          ))\r\n                        : null}\r\n                    {place.cuisine\r\n                        ? place.cuisine.map(({ name }) => (\r\n                              <Chip key={name} size='small' label={name} className={classes.chip}></Chip>\r\n                          ))\r\n                        : null}\r\n                    {place.address ? (\r\n                        <Typography gutterBottom variant='subtitle2' color='textSecondary' className={classes.subtitle}>\r\n                            <LocationOnIcon /> {place.address}\r\n                        </Typography>\r\n                    ) : null}\r\n                    {place.phone ? (\r\n                        <Typography gutterBottom variant='subtitle2' color='textSecondary' className={classes.spacing}>\r\n                            <PhoneIcon /> {place.phone}\r\n                        </Typography>\r\n                    ) : null}\r\n                    <CardActions>\r\n                        <Button size='small' color='primary' onClick={() => window.open(place.web_url, '_blank')}>\r\n                            Trip Advisor\r\n                        </Button>\r\n                        <Button size='small' color='primary' onClick={() => window.open(place.website, '_blank')}>\r\n                            Website\r\n                        </Button>\r\n                    </CardActions>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlaceDetails;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        marginBottom: '30px',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    loading: {\r\n        height: '600px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    container: {\r\n        padding: '25px',\r\n    },\r\n    marginBottom: {\r\n        marginBottom: '30px',\r\n    },\r\n    list: {\r\n        height: '75vh',\r\n        overflow: 'auto',\r\n    },\r\n}));\r\n","import React, { useState, createRef, useEffect } from 'react';\r\nimport { CircularProgress, Grid, Typography, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\r\n\r\nimport PlaceDetails from '../PlaceDetails/PlaceDetails';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst List = ({ places, childClicked, isLoading, type, setType, rating, setRating }) => {\r\n    const classes = useStyles();\r\n    const [elRefs, setElRefs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (places && places.length) {\r\n            const refs = Array(places.length)\r\n                .fill()\r\n                .map((_, i) => elRefs[i] || createRef());\r\n            console.log(refs);\r\n            setElRefs(refs);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [places]);\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Typography variant='h4'>Restaurants, Hotels & Attractions around you</Typography>\r\n            {isLoading ? (\r\n                <div className={classes.loading}>\r\n                    <CircularProgress size='5rem'></CircularProgress>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel>Type</InputLabel>\r\n                        <Select value={type} onChange={(e) => setType(e.target.value)}>\r\n                            <MenuItem value='restaurants'>Restaurants</MenuItem>\r\n                            <MenuItem value='hotels'>Hotels</MenuItem>\r\n                            <MenuItem value='attractions'>Attractions</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel>Rating</InputLabel>\r\n                        <Select value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                            <MenuItem value={0}>All</MenuItem>\r\n                            <MenuItem value={3}>Above 3.0</MenuItem>\r\n                            <MenuItem value={4}>Above 4.0</MenuItem>\r\n                            <MenuItem value={4.5}>Above 4.5</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Grid container spacing={3} className={classes.list}>\r\n                        {places\r\n                            ? places.map((place, i) => (\r\n                                  <Grid ref={elRefs[i]} item key={i} xs={12}>\r\n                                      <PlaceDetails\r\n                                          place={place}\r\n                                          selected={Number(childClicked) === i}\r\n                                          refProp={elRefs[i]}\r\n                                      />\r\n                                  </Grid>\r\n                              ))\r\n                            : null}\r\n                    </Grid>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  paper: {\r\n    padding: '10px', display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100px',\r\n  },\r\n  mapContainer: {\r\n    height: '85vh', width: '100%',\r\n  },\r\n  markerContainer: {\r\n    position: 'absolute', transform: 'translate(-50%, -50%)', zIndex: 1, '&:hover': { zIndex: 2 },\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n}));","export default [\r\n    {\r\n        featureType: 'all',\r\n        elementType: 'all',\r\n        stylers: [\r\n            {\r\n                saturation: '32',\r\n            },\r\n            {\r\n                lightness: '-3',\r\n            },\r\n            {\r\n                visibility: 'on',\r\n            },\r\n            {\r\n                weight: '1.18',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        featureType: 'administrative',\r\n        elementType: 'labels',\r\n        stylers: [\r\n            {\r\n                visibility: 'on',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        featureType: 'landscape',\r\n        elementType: 'labels',\r\n        stylers: [\r\n            {\r\n                visibility: 'off',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        featureType: 'landscape.man_made',\r\n        elementType: 'all',\r\n        stylers: [\r\n            {\r\n                saturation: '-70',\r\n            },\r\n            {\r\n                lightness: '14',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        featureType: 'poi',\r\n        elementType: 'labels',\r\n        stylers: [\r\n            {\r\n                visibility: 'off',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        featureType: 'road',\r\n        elementType: 'labels',\r\n        stylers: [\r\n            {\r\n                visibility: 'off',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        featureType: 'transit',\r\n        elementType: 'labels',\r\n        stylers: [\r\n            {\r\n                visibility: 'off',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        featureType: 'water',\r\n        elementType: 'all',\r\n        stylers: [\r\n            {\r\n                saturation: '100',\r\n            },\r\n            {\r\n                lightness: '-14',\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        featureType: 'water',\r\n        elementType: 'labels',\r\n        stylers: [\r\n            {\r\n                visibility: 'off',\r\n            },\r\n            {\r\n                lightness: '12',\r\n            },\r\n        ],\r\n    },\r\n];\r\n","import React from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport LocationOnOutLinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport useStyles from './styles';\r\nimport mapStyles from './mapStyles';\r\n\r\nconst Map = ({ setCoordinates, setBounds, coordinates, places, setChildClicked, weatherData }) => {\r\n    const classes = useStyles();\r\n    const isDesktop = useMediaQuery('(min-width:600px)');\r\n\r\n    return (\r\n        <div className={classes.mapContainer}>\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\r\n                defaultCenter={{ lt: 0, lng: 0 }}\r\n                center={coordinates}\r\n                defaultZoom={14}\r\n                margin={[50, 50, 50, 50]}\r\n                options={{ disableDefaultUI: true, zoomControl: true, styles: mapStyles }}\r\n                onChange={(e) => {\r\n                    setCoordinates({ lat: e.center.lat, lng: e.center.lng });\r\n                    setBounds({ ne: e.marginBounds.ne, sw: e.marginBounds.sw });\r\n                }}\r\n                onChildClick={(child) => setChildClicked(child)}>\r\n                {places\r\n                    ? places.map((place, i) => (\r\n                          <div\r\n                              className={classes.markerContainer}\r\n                              lat={Number(place.latitude)}\r\n                              lng={Number(place.longitude)}\r\n                              key={i}>\r\n                              {!isDesktop ? (\r\n                                  <LocationOnOutLinedIcon color='primary' fontSize='large' />\r\n                              ) : (\r\n                                  <Paper elevation={3} className={classes.paper}>\r\n                                      <Typography className={classes.typography} variant='subtitle2' gutterBottom>\r\n                                          {place.name}\r\n                                      </Typography>\r\n                                      <img\r\n                                          className={classes.pointer}\r\n                                          src={\r\n                                              place.photo\r\n                                                  ? place.photo.images.large.url\r\n                                                  : 'https://www.foodserviceandhospitality.com/wp-content/uploads/2016/09/Restaurant-Placeholder-001.jpg'\r\n                                          }\r\n                                          alt={place.name}\r\n                                      />\r\n                                      <Rating size='small' value={Number(place.rating)} readOnly />\r\n                                  </Paper>\r\n                              )}\r\n                          </div>\r\n                      ))\r\n                    : null}\r\n                {weatherData\r\n                    ? weatherData.list\r\n                        ? weatherData.list.map((data, i) => (\r\n                              <div key={i} lat={data.coord.lat} lng={data.coord.lon}>\r\n                                  <img src={`https://openweathermap.org/img/w/${data.weather[0].icon}.png`} alt='' />\r\n                              </div>\r\n                          ))\r\n                        : null\r\n                    : null}\r\n            </GoogleMapReact>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CssBaseline, Grid } from '@material-ui/core';\r\n\r\nimport { getPlacesData, getWeatherData } from './api';\r\nimport Header from './Components/Header/Header';\r\nimport List from './Components/List/List';\r\nimport Map from './Components/Map/Map';\r\n\r\nfunction App() {\r\n    const [places, setPlaces] = useState([]);\r\n    const [weatherData, setWeatherData] = useState([]);\r\n    const [filteredPlaces, setFilteredPlaces] = useState([]);\r\n    const [coordinates, setCoordinates] = useState({ lat: 0, lng: 0 });\r\n    const [bounds, setBounds] = useState({});\r\n    const [childClicked, setChildClicked] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [type, setType] = useState('restaurants');\r\n    const [rating, setRating] = useState('');\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(({ coords: { latitude, longitude } }) => {\r\n            setCoordinates({ lat: latitude, lng: longitude });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const filteredPlaces = places.filter((place) => place.rating > rating);\r\n\r\n        setFilteredPlaces(filteredPlaces);\r\n        // eslint-disable-next-line\r\n    }, [rating]);\r\n\r\n    useEffect(() => {\r\n        if (bounds.sw && bounds.ne) {\r\n            setIsLoading(true);\r\n\r\n            getWeatherData(coordinates.lat, coordinates.lng).then((data) => setWeatherData(data));\r\n\r\n            getPlacesData(type, bounds.sw, bounds.ne).then((data) => {\r\n                if (data) setPlaces(data.filter((place) => place.name && place.num_reviews > 0));\r\n                setFilteredPlaces([]);\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [type, bounds]);\r\n\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n            <Header setCoordinates={setCoordinates} />\r\n            <Grid container spacing={3} style={{ width: '100%' }}>\r\n                <Grid item xs={12} md={4}>\r\n                    <List\r\n                        places={filteredPlaces.length ? filteredPlaces : places}\r\n                        childClicked={childClicked}\r\n                        isLoading={isLoading}\r\n                        type={type}\r\n                        setType={setType}\r\n                        rating={rating}\r\n                        setRating={setRating}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={8}>\r\n                    <Map\r\n                        setCoordinates={setCoordinates}\r\n                        setBounds={setBounds}\r\n                        coordinates={coordinates}\r\n                        places={filteredPlaces.length ? filteredPlaces : places}\r\n                        setChildClicked={setChildClicked}\r\n                        weatherData={weatherData}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}